() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
  var cs = in_msg_cell.begin_parse();
  var flags = cs~load_uint(4);  ;; int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool
  if (flags & 1) {
    ;; ignore all bounced messages
    return ();
  }
  slice s_addr = cs~load_msg_addr();
  throw_if(299, in_msg.slice_empty?()); ;; inbound message has empty body
  
  int op = in_msg~load_uint(32);
  ifnot (op) { 
    return ();   ;; simple transfer with comment
  }

  (int bridge_address, int oracles_address, _) = get_bridge_config();
  (int wc, int addr) = parse_std_addr(s_addr);
  var is_oracles = (wc == -1) & (oracles_address == addr);

  if (op == 4) {
    throw_unless(305, is_oracles);
    return execute_voting(s_addr, in_msg, bridge_address);
  }
  throw_if(306, is_oracles); ;; don't allow to create swaps from oracles multisig
  if (op == 0) {
    return process_comment_api_request(in_msg, msg_value, s_addr);
  }

  int query_id = in_msg~load_uint(64);
  if (op == 3) {
    int destination_address = in_msg~load_uint(160);
    return create_swap_from_ton(destination_address, msg_value, s_addr, query_id, false);
  }
}
